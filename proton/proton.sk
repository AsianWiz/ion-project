options:
	p: &6 ⦿&f #
	t: &f
	h: &7
	em: &cInvalid Permissions
	joinMessage: &2&l»&r &a
	quitMessage: &4&l«&r &c
	animals: pig and sheep and cow and horse and chicken and wolf and ocelot and bat and mooshroom and rabbit and squid and villager and donkey
	monsters: cave spider and enderman and spider and zombie pigman and blaze and creeper and guardian and endermite and ghast and magma cube and silverfish and skeleton and slime and witch and wither skeleton and zombie
on load:
	if {proton.maxHealth} is not set:
		set {proton.maxHealth} to 10
command /proton [<text>]:
	description: Shows all commands in Proton
	trigger:
		if arg 1 is not set:
			send "&cUsage: /proton [help]"
		if arg 1 is "help":
			send "&6&m---+---&r &eProton &6&m---+---&r"
			send " &8• &7A List of commands can be found here:"
			send " &f&nhttps://goo.gl/EAFlng"
#		if arg 1 is "reload" or "rl":
#			if sender has permission "proton.reload":
#				send "{@p} Reloading {@h}Proton{@t}..."
#				wait 1 second
#				if sender is op:
#					player command "/sk reload %skript%"
#				else:
#					console command "/sk reload %skript%"
#					wait 3 seconds
#					send "{@p} Successfully reloaded {@h}Proton{@t}."
command /gm [<text>] [<player>]:
	permission: proton.gm
	description: Changes gamemode
	permission message: {@em}
	usage: /gm [gamemode] (player)
	trigger:
		if arg 1 is not set:
			send "&cUsage: /gm [num] (player)"
		else if arg 1 is "creative" or "c" or "1":
			if arg 2 is not set:
				set player's gamemode to creative
				send "{@p} Your gamemode has been updated to {@h}Creative{@t}." to sender
			else:
				set player-arg's gamemode to creative
				send "{@p} {@h}%player-arg%{@t}'s gamemode was updated to {@h}Creative{@t}." to sender
				send "{@p} Your gamemode has been updated to {@h}Creative{@t}." to player-arg
		else if arg 1 is "survival" or "s" or "0":
			if arg 2 is not set:
				set player's gamemode to survival
				send "{@p} Your gamemode has been updated to {@h}Survival{@t}." to sender
			else:
				set player-arg's gamemode to survival
				send "{@p} {@h}%player-arg%{@t}'s gamemode was updated to {@h}Survival{@t}." to sender
				send "{@p} Your gamemode has been updated to {@h}Survival{@t}." to player-arg
		else if arg 1 is "adventure" or "a" or "2":
			if arg 2 is not set:
				set player's gamemode to adventure
				send "{@p} Your gamemode has been updated to {@h}Adventure{@t}." to sender
			else:
				set player-arg's gamemode to adventure
				send "{@p} {@h}%player-arg%{@t}'s gamemode was updated to {@h}Adventure{@t}." to sender
				send "{@p} Your gamemode has been updated to {@h}Adventure{@t}." to player-arg
		else if arg 1 is "spectator" or "sp" or "3" or "spec":
			if arg 2 is not set:
				set player's gamemode to spectator
				send "{@p} Your gamemode has been updated to {@h}Spectator{@t}." to sender
			else:
				set player-arg's gamemode to spectator
				send "{@p} {@h}%player-arg%{@t}'s gamemode was updated to {@h}Spectator{@t}." to sender
				send "{@p} Your gamemode has been updated to {@h}Spectator{@t}." to player-arg
		else:
			send "&c&oInvalid Argument."
			send "&cUsage: /gm [num] (player)"
command /fly [<player>]:
	permission: proton.fly
	description: Toggles flight
	permission message: {@em}
	usage: /fly (player)
	trigger:
		if arg 1 is not set:
			if {proton.fly::%sender%} is true:
				delete {proton.fly::%sender%}
				set sender's fly mode to false
				send "{@p} Flight mode {@h}disabled{@t}."
			else:
				set {proton.fly::%sender%} to true
				set sender's fly mode to true
				send "{@p} Flight mode {@h}enabled{@t}."
		else:
			if {proton.fly::%player-arg%} is true:
				delete {proton.fly::%player-arg%}
				set player-arg's fly mode to false
				send "{@p} Flight mode {@h}disabled{@t}." to player-arg
				send "{@p} {@h}%player-arg%{@t}'s flight mode was {@h}disabled{@t}." to sender
			else:
				set {proton.fly::%player-arg%} to true
				set player-arg's fly mode to true
				send "{@p} Flight mode {@h}enabled{@t}." to player-arg
				send "{@p} {@h}%player-arg%{@t}'s flight mode was {@h}enabled{@t}." to sender
command /tp [<player>] [<player>]:
	permission: proton.tp
	description: Teleports to player
	permission message: {@em}
	usage: /tp [player] (player)
	trigger:
		if arg 1 is not set:
			send "&cUsage: /tp [player] (player)"
		else if arg 1 is set:
			if arg 2 is not set:
				teleport sender to arg-1
				send "{@p} Teleported to {@h}%arg-1%{@t}." to sender
			else:
				teleport arg-1 to arg-2
				send "{@p} Teleported {@h}%arg-1%{@t}" to sender
				send "{@p} Teleported to {@h}%sender%{@t}." to arg-1
command /tphere [<player>]:
	permission: proton.tphere
	description: Teleports a player to sender
	permission message: {@em}
	usage: /tphere [player]
	aliases: /s
	trigger:
		if arg 1 is not set:
			send "&cUsage: /tphere [player]"
		else if arg 1 is set:
			teleport arg-1 to sender
			send "{@p} Teleported {@h}%arg-1%{@t} to you." to sender
			send "{@p} Teleported to {@h}%sender%{@t}." to arg-1
command /tpcoords [<integer>] [<integer>] [<integer>]:
	permission: proton.tpcoords
	aliases: /tppos
	permission message: {@em}
	usage: /tpcoords [x] [y] [z]
	trigger:
		if arg 1 is not set:
			send "&cUsage: /tpcoords [x] [y] [z]"
		else if arg 1 is set:
			if arg 2 is set:
				if arg 3 is set:
					set {_world} to sender's world
					set {_loc} to location(arg-1, arg-2, arg-3, {_world})
					teleport sender to {_loc}
					send "{@p} Teleported to {@h}%arg-1%, %arg-2%, %arg-3%{@t}."
				else:
					send "&c&oInvalid Argument."
					send "&cUsage: /tpcoords [x] [y] [z]"
			else:
				send "&c&oInvalid Argument."
				send "&cUsage: /tpcoords [x] [y] [z]"
command /sethome:
	permission: proton.sethome
	permission message: {@em}
	usage: /sethome
	trigger:
		set {proton.home::%sender's uuid%} to sender's location
		set {_x} to sender's x-coordinate
		set {_y} to sender's y-coordinate
		set {_z} to sender's z-coordinate
		send "{@p} Home set at {@h}%{_x}%, %{_y}%, %{_z}%{@t}."
command /home:
	permission: proton.home
	permission message: {@em}
	usage: /home
	trigger:
		if {proton.home::%sender's uuid%} is set:
			teleport sender to {proton.home::%sender's uuid%}
			send "{@p} Teleported to your home location."

		else:
			send "&c&oYou do not have a home set."
			send "&cUsage: /sethome"
command /setspawn:
	permission: proton.setspawn
	permission message: {@em}
	usage: /setspawn
	trigger:
		if {proton.spawn} is set:
			set {proton.spawn} to sender's location
			set {_x} to sender's x-coordinate
			set {_y} to sender's y-coordinate
			set {_z} to sender's z-coordinate
			send "{@p} Spawn location set to {@h}%{_x}%, %{_y}%, %{_z}%{@t}."

		else:
			send "&c&oYou do not have a home set."
			if sender has permission "proton.sethome":
				send "&cUsage: /sethome"
command /spawn [<player>]:
	permission: proton.spawn
	permission message: {@em}
	usage: /spawn (player)
	trigger:
		if {proton.spawn} is set:
			if arg 1 is set:
				teleport arg-1 to {proton.spawn}
				send "{@p} Teleported {@h}%arg-1%{@t} to spawn." to sender
				send "{@p} Teleported to spawn." to arg-1
			else:
				teleport sender to {proton.spawn}
				send "{@p} Teleported to spawn." to sender
		else:
			send "&c&oSpawn is not set."
			if sender has permission "proton.setspawn":
				send "&cUsage: /setspawn"
command /vanish [<player>]:
	permission: proton.vanish
	permission message: {@em}
	usage: /vanish (player)
	trigger:
		if arg 1 is not set:
			if {proton.visibility::%player%} is true:
				delete {proton.visibility::%player%}
				remove invisibility from player
				send "{@p} You have been reappeared." to player

			else:
				set {proton.visibility::%player%} to true
				apply invisibility 2 to the player for 9999 days
				send "{@p} You have been vanished." to player

		else if arg 1 is set:
			if {proton.visibility::%arg-1%} is true:
				delete {proton.visibility::%arg-1%}
				remove invisibility from arg-1
				send "{@p} You have been reappeared." to arg-1
				send "{@p} {@h}%arg-1%{@t} has been reappeared." to sender
			else:
				set {proton.visibility::%arg-1%} to true
				apply invisibility 2 to the arg-1 for 9999 days
				send "{@p} You have been vanished." to arg-1
				send "{@p} {@h}%arg-1%{@t} has been vanished." to sender
on join:
	delete {proton.visibility::%event-player%}
	delete {proton.fly::%event-player%}
	remove invisibility from the event-player

command /gmc [<player>]:
	permission: proton.gm
	permission message: {@em}
	usage: &c/gmc (player)
	description: Changes gamemode to Creative
	trigger:
		if arg 1 is not set:
			set player's gamemode to creative
			send "{@p} Your gamemode has been updated to {@h}Creative{@t}." to sender
		else:
			set player-arg's gamemode to creative
			send "{@p} Your gamemode has been updated to {@h}Creative{@t}." to player-arg
			send "{@p} {@h}%player-arg%{@t}'s gamemode was updated to {@h}Creative{@t}" to sender
command /gms [<player>]:
	permission: proton.gm
	permission message: {@em}
	usage: &c/gms (player)
	description: Changes gamemode to Survival
	trigger:
		if arg 1 is not set:
			set player's gamemode to survival
			send "{@p} Your gamemode has been updated to {@h}Survival{@t}." to sender
		else:
			set player-arg's gamemode to survival
			send "{@p} Your gamemode has been updated to {@h}Survival{@t}." to player-arg
			send "{@p} {@h}%player-arg%{@t}'s gamemode was updated to {@h}Survival{@t}" to sender
command /gma [<player>]:
	permission: proton.gm
	permission message: {@em}
	usage: &c/gma (player)
	description: Changes gamemode to Adventure
	trigger:
		if arg 1 is not set:
			set player's gamemode to Adventure
			send "{@p} Your gamemode has been updated to {@h}Adventure{@t}." to sender
		else:
			set player-arg's gamemode to Adventure
			send "{@p} Your gamemode has been updated to {@h}Adventure{@t}." to player-arg
			send "{@p} {@h}%player-arg%{@t}'s gamemode was updated to {@h}Adventure{@t}" to sender
command /gmsp [<player>]:
	permission: proton.gm
	permission message: {@em}
	usage: &c/gmsp (player)
	description: Changes gamemode to Spectator
	trigger:
		if arg 1 is not set:
			set player's gamemode to Spectator
			send "{@p} Your gamemode has been updated to {@h}Spectator{@t}." to sender
		else:
			set player-arg's gamemode to Spectator
			send "{@p} Your gamemode has been updated to {@h}Spectator{@t}." to player-arg
			send "{@p} {@h}%player-arg%{@t}'s gamemode was updated to {@h}Spectator{@t}" to sender
on join:
	set join message to "{@joinMessage}%name of player%"
on quit:
	set leave message to "{@quitMessage}%name of player%"
command /top:
	permission: proton.top
	permission message: {@em}
	usage: &c/top
	description: Teleports you up to the highest point above you
	trigger:
		set {_loc} to location of block at player
		set y-coordinate of {_loc} to 256
		set {_n} to 0
		loop 255 times:
			set {_n} to {_n}+1
			block {_n} below block at {_loc} is not air
			set {_n} to {_n}-1
			teleport player to block {_n} below block at {_loc}
			send "{@p} Teleported to top."
			stop
		send "&cYou are already at the top."
command /speed [<number>] [<player>]:
	permission: proton.speed
	permission message: {@em}
	usage: &c/speed [0-5] (player)
	description: Changes walk/flight speed
	trigger:
		if arg 1 is set:
			if arg 2 is set:
				if arg 1 is between 1 and 5:
					set {_speed} to arg-1 / 5
					set {_block} to block below player-arg
					if {_block} is air:
						if "%player-arg%" = "%sender%":
							#send "{@p} {@h}%player-arg%{@t}'s flight speed was set to &a%arg-2%{@t}."
							send "{@p} {@h}Your{@t} flight speed was set to &a%arg-2%{@t}." to player-arg
							set the player-arg's flight speed to {_speed}
						else:
							send "{@p} {@h}%player-arg%{@t}'s flight speed was set to &a%arg-2%{@t}." to sender
							send "{@p} {@h}Your{@t} flight speed was set to &a%arg-2%{@t}." to player-arg
							set the player-arg's flight speed to {_speed}
					else:
						if "%player-arg%" = "%sender%":
							#send "{@p} {@h}%player-arg%{@t}'s walk speed was set to &a%arg-2%{@t}."
							send "{@p} {@h}Your{@t} walk speed was set to &a%arg-2%{@t}." to player-arg
							set the player-arg's walk speed to {_speed}
						else:
							send "{@p} {@h}%player-arg%{@t}'s flight speed was set to &a%arg-2%{@t}." to sender
							send "{@p} {@h}Your{@t} walk speed was set to &a%arg-2%{@t}." to player-arg
							set the player-arg's walk speed to {_speed}
				else if arg-1 is less than or equal to 0:
					set {_block} to block below player-arg
					if {_block} is air:
						if "%player-arg%" = "%sender%":
							#send "{@p} {@h}%player-arg%{@t}'s flight speed was set to &a%arg-2%{@t}."
							send "{@p} {@h}Your{@t} flight speed was reset." to player-arg
							set the player-arg's flight speed to 0.1
						else:
							send "{@p} {@h}%player-arg%{@t}'s flight speed was reset." to sender
							send "{@p} {@h}Your{@t} flight speed was reset." to player-arg
							set the player-arg's flight speed to 0.1
					else:
						if "%player-arg%" = "%sender%":
							#send "{@p} {@h}%player-arg%{@t}'s walk speed was set to &a%arg-2%{@t}."
							send "{@p} {@h}Your{@t} walk speed was reset." to player-arg
							set the player-arg's walk speed to 0.2
						else:
							send "{@p} {@h}%player-arg%{@t}'s flight speed was set to &a%arg-2%{@t}." to sender
							send "{@p} {@h}Your{@t} walk speed was reset." to player-arg
							set the player-arg's walk speed to 0.2
			else:
				if arg-1 is between 1 and 5:
					set {_speed} to arg-1 / 5
					set {_block} to block below player-arg
					if {_block} is air:
						send "{@p} {@h}Your{@t} flight speed was set to &a%arg-2%{@t}."
						set the player-arg's flight speed to {_speed}
					else:
						send "{@p} {@h}Your{@t} walk speed was set to &a%arg-2%{@t}."
						set the player-arg's walk speed to {_speed}
				else if arg-1 is less than or equal to 0:
					set {_block} to block below player-arg
					if {_block} is air:
						send "{@p} {@h}Your{@t} flight speed was reset." to player-arg
						set the player-arg's flight speed to 0.1
					else:
						send "{@p} {@h}Your{@t} walk speed was reset." to player-arg
						set the player-arg's walk speed to 0.2
		else:
			send "&cUsage: /speed [0-5] (player)"
command /blacklist [<text>] [<offline player>]:
	permission: proton.blacklist
	permission message: {@em}
	usage: &c/blacklist [add|remove|list|reset] (player)
	description: Blacklists people to the server
	trigger:
		if arg 1 is "add" or "+":
			if arg 2 is set:
				send "{@p} {@h}%offline player-arg%{@t} has been added to the &8blacklist{@t}."
				add "%offline player-arg%" to {proton.blacklist::*}
			else:
				send "&c&oSpecify a player"
				send "&cUsage: /blacklist %arg-1% (player)"
		else if arg 1 is "remove" or "delete" or "-":
			if arg 2 is set:
				if "%{proton.blacklist::*}%" contains "%offline player-arg%":
					send "{@p} {@h}%offline player-arg%{@t} has been removed from the &8blacklist{@t}."
					remove "%offline player-arg%" from {proton.blacklist::*}
				else:
					send "&c&oThat player is not on the blacklist"
					send "&cUsage: /blacklist %arg-1% &m%arg-2%"
			else:
				send "&c&oSpecify a player"
				send "&cUsage: /blacklist %arg-1% (player)"
		else if arg 1 is "list":
			send "{@p} &8Blacklist&7:"
			loop {proton.blacklist::*}:
				send "  &7- &a%loop-value%"
			stop
		else if arg 1 is "reset":
			if sender has permission "proton.blacklist.reset":
				delete {proton.blacklist::*}
				send "{@p} &8Blacklist{@t} cleared."
			else:
				send "{@em}"
		else if arg 1 is "on":
			set {proton.blacklist} to true
			send "{@p} Blacklist enabled."
		else if arg 1 is "off":
			set {proton.blacklist} to false
			send "{@p} Blacklist disabled."
		else:
			send "&cUsage: /blacklist [add|remove|list|reset] (player)"
		stop
on connect:
	if {proton.whitelist} is true:
		if "%{proton.whitelist::*}%" doesn't contain "%event-player%":
			kick event-player due to "&7You are not &fWhitelisted &7on this server."
			stop
		else if "%{proton.blacklist::*}%" contains "%event-player%":
			if {proton.blacklist} is true:
				kick event-player due to "&7You are &8Blacklisted&7 on this server."
				stop
	else if {proton.blacklist} is true:
		if "%{proton.blacklist::*}%" contains "%event-player%":
			kick event-player due to "&7You are &8Blacklisted&7 on this server."
			stop
command /whitelist [<text>] [<offline player>]:
	permission: proton.whitelist
	permission message: {@em}
	usage: &c/whitelist [add|remove|list|reset] (player)
	description: Whitelists people to the server
	trigger:
		if arg 1 is "add" or "+":
			if arg 2 is set:
				send "{@p} {@h}%offline player-arg%{@t} has been added to the &7Whitelist{@t}."
				add "%offline player-arg%" to {proton.whitelist::*}
			else:
				send "&c&oSpecify a player"
				send "&cUsage: /whitelist %arg-1% (player)"
		else if arg 1 is "remove" or "delete" or "-":
			if arg 2 is set:
				if "%{proton.whitelist::*}%" contains "%offline player-arg%":
					send "{@p} {@h}%offline player-arg%{@t} has been removed from the &7Whitelist{@t}."
					remove "%offline player-arg%" from {proton.whitelist::*}
				else:
					send "&c&oThat player is not on the whitelist"
					send "&cUsage: /whitelist %arg-1% &m%arg-2%"
			else:
				send "&c&oSpecify a player"
				send "&cUsage: /whitelist %arg-1% (player)"
		else if arg 1 is "list":
			send "{@p} &7Whitelist&7:"
			loop {proton.whitelist::*}:
				send "  &7- &a%loop-value%"
			stop
		else if arg 1 is "reset":
			if sender has permission "proton.whitelist.reset":
				delete {proton.whitelist::*}
				send "{@p} &7Whitelist{@t} cleared."
			else:
				send "{@em}"
		else if arg 1 is "on":
			set {proton.whitelist} to true
			send "{@p} Whitelist enabled."
		else if arg 1 is "off":
			set {proton.whitelist} to false
			send "{@p} Whitelist disabled."
		else:
			send "&cUsage: /whitelist [add|remove|list|reset] (player)"
		stop
command /time [<text>]:
	permission: proton.time
	permission message: {@em}
	usage: &c/time [set] [day|night|noon|midnight|...]
	description: Sets the time of day
	trigger:
		if arg 1 is "day":
			set time to 9:00am
			send "{@p} Time set to {@h}Day{@t}, or &a9:00am{@t}."
		else if arg 1 is "noon":
			set time to 12:00pm
			send "{@p} Time set to {@h}Noon{@t}, or &a12:00pm{@t}."
		else if arg 1 is "night":
			set time to 9:00pm
			send "{@p} Time set to {@h}Night{@t}, or &a9:00pm{@t}."
		else if arg 1 is "midnight":
			set time to 12:00am
			send "{@p} Time set to {@h}Midnight{@t}, or &a12:00am{@t}."
		else if arg 1 is "dawn":
			set time to 6:00am
			send "{@p} Time set to {@h}Dawn{@t}, or &a6:00am{@t}."
		else if arg 1 is "dusk":
			set time to 7:00pm
			send "{@p} Time set to {@h}Dusk{@t}, or &a7:00am{@t}."
		else if arg 1 is "perm":
			if {proton.permTime} is true:
				set {proton.permTime} to false
				send "{@p} {@h}Perm Time{@t} disabled."
				make player execute command "/gamerule doDaylightCycle false"
			else:
				set {proton.permTime} to true
				send "{@p} {@h}Perm Time{@t} enabled."
				make player execute command "/gamerule doDaylightCycle true"
		else:
			send "&c&oTime does not exist."
			send "&cUsage: &c/time &m%arg-1%"
command /day:
	permission: proton.time
	permission message: {@em}
	description: Sets the time of day
	trigger:
		player command "/time day"
command /night:
	permission: proton.time
	permission message: {@em}
	description: Sets the time of day
	trigger:
		player command "/time night"
command /weather [<text>]:
	permission: proton.weather
	permission message: {@em}
	usage: &c/weather [sun|rain|thunder]
	description: Sets the worlds weather
	trigger:
		if arg 1 is "sun":
			set weather to clear
			send "{@p} Weather set to {@h}Sun{@t}."
		else if arg 1 is "rain":
			set weather to rain
			send "{@p} Weather set to {@h}Rain{@t}."
		else if arg 1 is "thunder":
			set weather to thunder
			send "{@p} Weather set to {@h}Thunder{@t}."
		else if arg 1 is "perm":
			if {proton.permWeather} is true:
				set {proton.permWeather} to false
				send "{@p} {@h}Perm Weather{@t} disabled."
			else:
				set {proton.permWeather} to true
				send "{@p} {@h}Perm Weather{@t} enabled."
on weather change:
	if {proton.permWeather} is true:
		cancel event
command /sun:
	permission: proton.weather
	permission message: {@em}
	description: Sets the worlds weather
	trigger:
		player command "/weather sun"
command /rain:
	permission: proton.weather
	permission message: {@em}
	description: Sets the worlds weather
	trigger:
		player command "/weather rain"
command /thunder:
	permission: proton.weather
	permission message: {@em}
	description: Sets the worlds weather
	trigger:
		player command "/weather thunder"
command /head [<text>]:
	permission: proton.head
	permission message: {@em}
	usage: &c/head [player]
	description: Gives a player head
	aliases: /skull, /playerhead
	trigger:
		if arg 1 is set:
			set {_head} to arg-1 parsed as offline player
			give {_head}'s skull named "&aPlayer Head" with lore "&7Skull Owner: &f%arg-1%" to player
			send "{@p} Given {@h}%arg-1%{@t}'s Head."
		else if arg 1 is not set:
			#set {_head} to sender
			give player's skull named "&aPlayer Head" with lore "&7Skull Owner: &f%player%" to player
			send "{@p} Given {@h}%sender%{@t}'s Head."
command /clear [<player>]:
	permission: proton.clear
	permission message: {@em}
	usage: &c/clear [player]
	description: Clears inventory
	aliases: /ci, /clearinventory
	trigger:
		if arg 1 is set:
			if "%player-arg%" = "%sender%":
				player command "/clear"
				stop
			else:
				loop player-arg's inventory:
					add 1 to {_n}
				clear player-arg's inventory
				send "{@p} Cleared {@h}%player-arg%'s{@t} inventory, with &a%{_n}% items{@t}."
				send "{@p} Your inventory has been cleared, with &a%{_n}% items{@t}." to player-arg
		else:
			loop player's inventory:
				add 1 to {_n}
			clear player's inventory
			send "{@p} Cleared {@h}your{@t} inventory, with &a%{_n}% items{@t}."
command /heal [<player>]:
	permission: proton.heal
	permission message: {@em}
	usage: &c/clear [player]
	description: Heals to full health
	trigger:
		if arg 1 is set:
			if "%player-arg%" = "%sender%":
				player command "/heal"
				stop
			else:
				heal player-arg
				send "{@p} Healed {@h}%player-arg%{@t}."
		else:
			heal player
			send "{@p} You were healed."
command /feed [<player>]:
	permission: proton.feed
	permission message: {@em}
	usage: &c/feed [player]
	description: Feeds to full hunger
	trigger:
		if arg 1 is set:
			if "%player-arg%" = "%sender%":
				player command "/feed"
				stop
			else:
				heal player-arg
				send "{@p} Nourished {@h}%player-arg%{@t}."
				send "{@p} You have been nourished." to player-arg
		else:
			heal player
			send "{@p} You have been nourished."
command /maxhealth [<integer>]:
	permission: proton.maxhealth
	permission message: {@em}
	usage: &c/maxhealth [number]
	description: Sets maximum health, goes by hearts.
	trigger:
		if arg 1 is not set:
			send "&cUsage: /maxhealth [1-100|0=reset]"
		else if arg 1 is less than or equal to 0:
			set {proton.maxHealth} to 10
			loop all players:
				set the maximum health of loop-player to {proton.maxHealth}
			send "{@p} Maximum health has been set to &a%{proton.maxHealth}% Hearts{@t}."
		else if arg 1 is greater than 100:
			send "&c&oToo high of a number!"
			send "&cUsage: /maxhealth [1-100|0=reset]"
		else:
			set {proton.maxHealth} to arg-1
			loop all players:
				set the maximum health of loop-player to {proton.maxHealth}
			send "{@p} Maximum health has been set to &a%{proton.maxHealth}% Hearts{@t}."
on join:
	if {proton.maxHealth} is set:
		set the maximum health of event-player to {proton.maxHealth}
